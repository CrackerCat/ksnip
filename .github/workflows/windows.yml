name: windows

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2
    
    - name: Set up build variables
      working-directory: ${{github.workspace}}
      run: sh ./.github/scripts/setup_build_variables.sh

    - name: Install Qt
      uses: jurplel/install-qt-action@v2
      with:
        version: '5.15.2'
        host: 'windows'
        install-deps: 'true'
        arch: 'win64_msvc2019_64'

    - name: Set up nmake
      uses: ilammy/msvc-dev-cmd@v1

    - name: Set up windows build variables
      working-directory: ${{github.workspace}}
      run: sh ./.github/scripts/setup_windows_build_variables.sh

    - name: Set up kColorPicker
      working-directory: ${{github.workspace}}
      run: |
        echo "--> Install latest version of kColorPicker"
        git clone --depth 1 git://github.com/ksnip/kColorPicker

        cd kColorPicker || exit
        mkdir build && cd build || exit
        cmake .. -G"NMake Makefiles" -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} -DBUILD_EXAMPLE=OFF -DCMAKE_INSTALL_PREFIX=${{ env.INSTALL_PREFIX }}
        nmake && nmake install
        
    - name: Set up kImageAnnotator
      working-directory: ${{github.workspace}}
      run: |
        echo "--> Install latest version of kImageAnnotator"
        git clone --depth 1 git://github.com/ksnip/kImageAnnotator

        cd kImageAnnotator || exit
        mkdir build && cd build || exit
        cmake .. -G"NMake Makefiles" -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} -DBUILD_EXAMPLE=OFF -DCMAKE_INSTALL_PREFIX=${{ env.INSTALL_PREFIX }}
        nmake && nmake install

    - name: Build
      working-directory: ${{github.workspace}}
      run: |
        mkdir build && cd build
        cmake .. -G"NMake Makefiles" -DBUILD_TESTS=ON -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} -DVERSION_SUFIX=${{ env.VERSION_SUFFIX }} -DBUILD_NUMBER=${{ env.BUILD_NUMBER }} -DCMAKE_INSTALL_PREFIX=${{ env.INSTALL_PREFIX }} -DOPENSSL_DIR="${{ env.WORKSPACE }}/open_ssl" -DKIMAGEANNOTATOR_DIR=${{ env.INSTALL_PREFIX }}
        nmake

    - name: Test
      working-directory: ${{github.workspace}}/build
      run: nmake test CTEST_OUTPUT_ON_FAILURE=1

    - name: Package exe
      working-directory: ${{github.workspace}}
      run: |
        wget --quiet -O openssl.zip "https://indy.fulgan.com/SSL/openssl-1.0.2q-i386-win32.zip"
        7z x openssl.zip -o"open_ssl"
        mkdir packageDir
        mv build/src/ksnip*.exe packageDir/ksnip.exe
        windeployqt.exe packageDir/ksnip.exe
        cp build/translations/ksnip_*.qm ./packageDir/translations/
        cp kImageAnnotator/build/translations/kImageAnnotator_*.qm ./packageDir/translations/
        cp open_ssl/libeay32.dll ./packageDir/
        cp open_ssl/ssleay32.dll ./packageDir/
        rm ./packageDir/opengl32sw.dll
        rm ./packageDir/vc_redist.x64.exe
        7z a ksnip-${{ env.VERSION }}-windows.zip ./packageDir/*

    - name: Package msi
      working-directory: ${{github.workspace}}
      run: sh ./.github/scripts/package_msi.sh

    - name: Upload files
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        wget -c https://github.com/probonopd/uploadtool/raw/master/upload.sh
        bash upload.sh ksnip-*.zip
        bash upload.sh ksnip-*.msi

